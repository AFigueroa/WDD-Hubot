// Description:
// This script will query a json api. The user will ask the api for a Pokemon name and hubot should respond with data about the Pokemon species.
//
// Dependencies:
// Request
//
// Configuration:
// None
//
// Commands:
// Hubot pokedex <pokemonName> - This command will read the value of "pokemonName" and will query the Pokeapi.com for that species of Pokemon. The api will respond with a json object containing information about the Pokemon species specified.
//
// Author:
// Antonio J. Figueroa

// Initialize a variable for the Request object.
var request = require( 'request' );

// Function to find the weather of the location entered.
function pokedex( msg ) {

  // Get the Pokemon name.
  var pokeName = msg.match[ 1 ];

  // Verify if submission is a string.
  if ( isNaN( pokeName ) == true ) {
    // *** Submission IS a string ***

    // Setup the url for the Pokeapi.
    url = 'http://pokeapi.co/api/v1/pokemon/'+pokeName;

    // Make a api request based on the submitted <pokeName>, from the prepared api URL.
    request( url, function ( error, response, body ) {

      // Verify if there's a succesfull conection.
      if ( !error && response.statusCode < 300 ) {
        // *** Connection Successful ***

        // Parse the incoming json.
        var json = JSON.parse( response.body );

        // Verify if there're no errors.
        if ( !json.error ) {
          // *** JSON Parsing Succesful ***

          // Return the requested information back to the user.
          msg.send( "A "+json.name+" has "+json.hp+" hp. It's attack is "+json.attack+", it's defense is "+json.defense
          +"." );

        } else {
          // *** An error occurred while parsing JSON ***

          // Return the error message generated by the json object
          var error = json.response.error.description;

          // Send the error message.
          msg.send( error );

        }
      } else {
        // *** The api is not responding ***

        // Respond with a specific error message.
        msg.send( "No Pokemon species was found. Please try again." );

      }

    } );
  } else {
    // *** Submission IS NOT a string ***

    // Respond with a specific error message.
    msg.send( "The pokemon you asked for doesn't exists. Please try again without numbers (0-9)." );

  }
}//...end of function.

// Listen to the "pokedex" command and be prepared to receive a user input.
module.exports = function( robot ) {
  return robot.respond( /pokedex (.*)/i, function( msg ) {

    // Run...
    pokedex(msg);

  } );
}
